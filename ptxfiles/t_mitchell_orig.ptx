//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Thu Jul  4 02:16:31 2013 (1372900591)
// Driver 319.37
//

.version 3.0
.target sm_30, texmode_independent
.address_size 32


.entry ray_intervals(
	.param .u32 .ptr .global .align 4 ray_intervals_param_0,
	.param .u32 .ptr .global .align 4 ray_intervals_param_1
)
{
	.reg .f32 	%f<17>;
	.reg .s32 	%r<38>;


	ld.param.u32 	%r17, [ray_intervals_param_0];
	ld.param.u32 	%r18, [ray_intervals_param_1];
	// inline asm
	mov.u32 	%r1, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r2, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r3, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r4, %tid.x;
	// inline asm
	add.s32 	%r19, %r4, %r1;
	mad.lo.s32 	%r20, %r3, %r2, %r19;
	mul.lo.s32 	%r21, %r20, 3;
	shl.b32 	%r22, %r21, 2;
	add.s32 	%r23, %r17, %r22;
	ld.global.f32 	%f1, [%r23];
	// inline asm
	mov.u32 	%r5, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r6, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r7, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r8, %tid.x;
	// inline asm
	add.s32 	%r24, %r8, %r5;
	mad.lo.s32 	%r25, %r7, %r6, %r24;
	mul.lo.s32 	%r26, %r25, 3;
	shl.b32 	%r27, %r26, 2;
	add.s32 	%r28, %r27, %r17;
	ld.global.f32 	%f2, [%r28+4];
	// inline asm
	mov.u32 	%r9, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r10, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r11, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r12, %tid.x;
	// inline asm
	add.s32 	%r29, %r12, %r9;
	mad.lo.s32 	%r30, %r11, %r10, %r29;
	mul.lo.s32 	%r31, %r30, 3;
	mul.f32 	%f3, %f1, %f1;
	mul.f32 	%f4, %f2, %f2;
	shl.b32 	%r32, %r31, 2;
	add.s32 	%r33, %r32, %r17;
	ld.global.f32 	%f5, [%r33+8];
	mul.f32 	%f6, %f5, %f5;
	fma.rn.f32 	%f7, %f1, %f1, %f4;
	fma.rn.f32 	%f8, %f5, %f5, %f7;
	fma.rn.f32 	%f9, %f2, %f2, %f6;
	mul.f32 	%f10, %f9, %f9;
	fma.rn.f32 	%f11, %f3, %f3, %f10;
	mul.f32 	%f12, %f3, %f9;
	mul.f32 	%f13, %f11, 0fC0800000;
	fma.rn.f32 	%f14, %f8, 0f41A00000, %f13;
	fma.rn.f32 	%f15, %f12, 0fC1880000, %f14;
	add.f32 	%f16, %f15, 0fC1880000;
	// inline asm
	mov.u32 	%r13, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r14, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r15, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r16, %tid.x;
	// inline asm
	add.s32 	%r34, %r16, %r13;
	mad.lo.s32 	%r35, %r15, %r14, %r34;
	shl.b32 	%r36, %r35, 2;
	add.s32 	%r37, %r18, %r36;
	st.global.f32 	[%r37], %f16;
	ret;
}


