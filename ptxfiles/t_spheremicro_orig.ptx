//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Thu Jul  4 02:16:31 2013 (1372900591)
// Driver 319.37
//

.version 3.0
.target sm_30, texmode_independent
.address_size 32

.const .align 4 .b8 __GPU_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.entry ray_intervals(
	.param .u32 .ptr .global .align 4 ray_intervals_param_0,
	.param .u32 .ptr .global .align 4 ray_intervals_param_1
)
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b32 	%SP;
	.reg .f32 	%f<203>;
	.reg .pred 	%p<64>;
	.reg .s32 	%r<445>;


	mov.u32 	%SP, __local_depot0;
	ld.param.u32 	%r129, [ray_intervals_param_0];
	// inline asm
	mov.u32 	%r117, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r118, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r119, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r120, %tid.x;
	// inline asm
	add.s32 	%r130, %r120, %r117;
	mad.lo.s32 	%r131, %r119, %r118, %r130;
	mul.lo.s32 	%r132, %r131, 3;
	shl.b32 	%r133, %r132, 2;
	add.s32 	%r134, %r129, %r133;
	ld.global.f32 	%f44, [%r134];
	// inline asm
	mov.u32 	%r121, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r122, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r123, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r124, %tid.x;
	// inline asm
	add.s32 	%r135, %r124, %r121;
	mad.lo.s32 	%r136, %r123, %r122, %r135;
	mul.lo.s32 	%r137, %r136, 3;
	shl.b32 	%r138, %r137, 2;
	add.s32 	%r139, %r138, %r129;
	ld.global.f32 	%f1, [%r139+4];
	// inline asm
	mov.u32 	%r125, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r126, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r127, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r128, %tid.x;
	// inline asm
	add.s32 	%r140, %r128, %r125;
	mad.lo.s32 	%r141, %r127, %r126, %r140;
	mul.lo.s32 	%r142, %r141, 3;
	mov.f32 	%f45, 0f3F800000;
	neg.f32 	%f46, %f44;
	fma.rn.f32 	%f47, %f46, %f44, %f45;
	neg.f32 	%f48, %f1;
	fma.rn.f32 	%f49, %f48, %f1, %f47;
	shl.b32 	%r143, %r142, 2;
	add.s32 	%r144, %r143, %r129;
	ld.global.f32 	%f2, [%r144+8];
	mul.f32 	%f3, %f2, %f2;
	neg.f32 	%f50, %f2;
	fma.rn.f32 	%f4, %f50, %f2, %f49;
	add.f32 	%f51, %f4, 0fBE19999A;
	sub.f32 	%f52, %f4, %f51;
	mul.f32 	%f5, %f4, %f4;
	mul.f32 	%f53, %f51, %f51;
	fma.rn.f32 	%f43, %f4, %f4, %f53;
	// inline asm
	sqrt.approx.f32 	%f42, %f43;
	// inline asm
	sub.f32 	%f6, %f52, %f42;
	mul.f32 	%f7, %f44, 0f41A00000;
	setp.eq.f32 	%p1, %f7, 0f7F800000;
	add.u32 	%r2, %SP, 0;
	@%p1 bra 	BB0_20;

	setp.eq.f32 	%p2, %f7, 0fFF800000;
	setp.eq.f32 	%p3, %f7, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB0_20;

	// inline asm
	abs.f32 	%f54, %f7;
	// inline asm
	setp.gt.f32 	%p5, %f54, 0f473BA700;
	@%p5 bra 	BB0_4;

	mov.f32 	%f58, 0f3F22F983;
	mul.rn.f32 	%f57, %f7, %f58;
	// inline asm
	cvt.rni.f32.f32 	%f56, %f57;
	// inline asm
	cvt.rzi.s32.f32 	%r422, %f56;
	cvt.rn.f32.s32 	%f59, %r422;
	mov.f32 	%f60, 0f3FC90000;
	mul.rn.f32 	%f61, %f59, %f60;
	sub.f32 	%f62, %f7, %f61;
	mov.f32 	%f63, 0f39FD8000;
	mul.rn.f32 	%f64, %f59, %f63;
	sub.f32 	%f65, %f62, %f64;
	mov.f32 	%f66, 0f34A88000;
	mul.rn.f32 	%f67, %f59, %f66;
	sub.f32 	%f68, %f65, %f67;
	mov.f32 	%f69, 0f2E85A309;
	mul.rn.f32 	%f70, %f59, %f69;
	sub.f32 	%f194, %f68, %f70;
	bra.uni 	BB0_16;

BB0_4:
	mov.b32 	 %r4, %f7;
	and.b32  	%r414, %r4, -2147483648;
	shr.u32 	%r6, %r4, 23;
	and.b32  	%r163, %r6, 255;
	add.s32 	%r164, %r163, -128;
	shl.b32 	%r165, %r4, 8;
	or.b32  	%r162, %r165, -2147483648;
	shr.u32 	%r166, %r164, 5;
	mov.u32 	%r167, 4;
	sub.s32 	%r168, %r167, %r166;
	ld.const.u32 	%r146, [__GPU_i2opi_f];
	mul.lo.s32 	%r169, %r146, %r162;
	// inline asm
	mul.hi.u32 	%r145, %r146, %r162;
	// inline asm
	st.local.u32 	[%r2], %r169;
	ld.const.u32 	%r149, [__GPU_i2opi_f+4];
	mul.lo.s32 	%r170, %r149, %r162;
	// inline asm
	mul.hi.u32 	%r148, %r149, %r162;
	// inline asm
	mad.lo.s32 	%r171, %r149, %r162, %r145;
	setp.lt.u32 	%p6, %r171, %r170;
	selp.u32 	%r172, 1, 0, %p6;
	add.s32 	%r173, %r172, %r148;
	st.local.u32 	[%r2+4], %r171;
	ld.const.u32 	%r152, [__GPU_i2opi_f+8];
	mul.lo.s32 	%r174, %r152, %r162;
	// inline asm
	mul.hi.u32 	%r151, %r152, %r162;
	// inline asm
	mad.lo.s32 	%r175, %r152, %r162, %r173;
	setp.lt.u32 	%p7, %r175, %r174;
	selp.u32 	%r176, 1, 0, %p7;
	add.s32 	%r177, %r176, %r151;
	st.local.u32 	[%r2+8], %r175;
	ld.const.u32 	%r155, [__GPU_i2opi_f+12];
	mul.lo.s32 	%r178, %r155, %r162;
	// inline asm
	mul.hi.u32 	%r154, %r155, %r162;
	// inline asm
	mad.lo.s32 	%r179, %r155, %r162, %r177;
	setp.lt.u32 	%p8, %r179, %r178;
	selp.u32 	%r180, 1, 0, %p8;
	add.s32 	%r181, %r180, %r154;
	st.local.u32 	[%r2+12], %r179;
	ld.const.u32 	%r158, [__GPU_i2opi_f+16];
	mul.lo.s32 	%r182, %r158, %r162;
	// inline asm
	mul.hi.u32 	%r157, %r158, %r162;
	// inline asm
	mad.lo.s32 	%r183, %r158, %r162, %r181;
	setp.lt.u32 	%p9, %r183, %r182;
	selp.u32 	%r184, 1, 0, %p9;
	add.s32 	%r185, %r184, %r157;
	st.local.u32 	[%r2+16], %r183;
	ld.const.u32 	%r161, [__GPU_i2opi_f+20];
	mul.lo.s32 	%r186, %r161, %r162;
	// inline asm
	mul.hi.u32 	%r160, %r161, %r162;
	// inline asm
	mad.lo.s32 	%r187, %r161, %r162, %r185;
	setp.lt.u32 	%p10, %r187, %r186;
	selp.u32 	%r188, 1, 0, %p10;
	add.s32 	%r189, %r188, %r160;
	st.local.u32 	[%r2+20], %r187;
	st.local.u32 	[%r2+24], %r189;
	and.b32  	%r7, %r6, 31;
	shl.b32 	%r191, %r168, 2;
	add.s32 	%r192, %r191, %r2;
	add.s32 	%r8, %r192, -16;
	ld.local.u32 	%r412, [%r192+8];
	ld.local.u32 	%r413, [%r192+4];
	setp.eq.s32 	%p11, %r7, 0;
	@%p11 bra 	BB0_6;

	shl.b32 	%r193, %r412, %r7;
	neg.s32 	%r194, %r6;
	and.b32  	%r195, %r194, 31;
	shr.u32 	%r196, %r413, %r195;
	or.b32  	%r412, %r196, %r193;
	ld.local.u32 	%r197, [%r8+16];
	shr.u32 	%r198, %r197, %r195;
	shl.b32 	%r199, %r413, %r7;
	or.b32  	%r413, %r198, %r199;

BB0_6:
	shr.u32 	%r200, %r413, 30;
	shl.b32 	%r201, %r412, 2;
	or.b32  	%r418, %r200, %r201;
	shl.b32 	%r16, %r413, 2;
	setp.ne.s32 	%p12, %r16, 0;
	selp.u32 	%r202, 1, 0, %p12;
	add.s32 	%r203, %r202, %r418;
	setp.gt.u32 	%p13, %r203, -2147483648;
	selp.u32 	%r204, 1, 0, %p13;
	shr.u32 	%r205, %r412, 30;
	add.s32 	%r206, %r204, %r205;
	neg.s32 	%r207, %r206;
	setp.lt.s32 	%p14, %r4, 0;
	selp.b32 	%r422, %r207, %r206, %p14;
	@%p13 bra 	BB0_8;

	mov.u32 	%r417, %r16;
	bra.uni 	BB0_9;

BB0_8:
	not.b32 	%r208, %r418;
	neg.s32 	%r18, %r16;
	setp.eq.s32 	%p15, %r16, 0;
	selp.u32 	%r209, 1, 0, %p15;
	add.s32 	%r418, %r209, %r208;
	xor.b32  	%r414, %r414, -2147483648;
	mov.u32 	%r417, %r18;

BB0_9:
	mov.u32 	%r416, %r417;
	setp.gt.s32 	%p16, %r418, 0;
	@%p16 bra 	BB0_11;

	mov.u32 	%r421, 0;
	bra.uni 	BB0_13;

BB0_11:
	mov.u32 	%r421, 0;

BB0_12:
	shr.u32 	%r212, %r416, 31;
	shl.b32 	%r213, %r418, 1;
	or.b32  	%r418, %r212, %r213;
	shl.b32 	%r416, %r416, 1;
	add.s32 	%r421, %r421, -1;
	setp.gt.s32 	%p17, %r418, 0;
	@%p17 bra 	BB0_12;

BB0_13:
	mul.lo.s32 	%r420, %r418, -921707870;
	mov.u32 	%r216, -921707870;
	// inline asm
	mul.hi.u32 	%r214, %r418, %r216;
	// inline asm
	setp.gt.s32 	%p18, %r214, 0;
	mov.u32 	%r419, %r214;
	@%p18 bra 	BB0_14;
	bra.uni 	BB0_15;

BB0_14:
	shl.b32 	%r217, %r214, 1;
	shr.u32 	%r218, %r420, 31;
	or.b32  	%r419, %r217, %r218;
	mul.lo.s32 	%r420, %r418, -1843415740;
	add.s32 	%r421, %r421, -1;

BB0_15:
	setp.ne.s32 	%p19, %r420, 0;
	selp.u32 	%r219, 1, 0, %p19;
	add.s32 	%r220, %r219, %r419;
	shr.u32 	%r221, %r220, 8;
	shr.u32 	%r222, %r220, 7;
	and.b32  	%r223, %r222, 1;
	shl.b32 	%r224, %r421, 23;
	add.s32 	%r225, %r224, %r221;
	add.s32 	%r226, %r225, %r223;
	add.s32 	%r227, %r226, 1056964608;
	or.b32  	%r228, %r227, %r414;
	mov.b32 	 %f194, %r228;

BB0_16:
	and.b32  	%r229, %r422, 1;
	setp.eq.s32 	%p20, %r229, 0;
	mul.rn.f32 	%f11, %f194, %f194;
	@%p20 bra 	BB0_18;

	mov.f32 	%f71, 0f37CCF5CE;
	mul.rn.f32 	%f72, %f71, %f11;
	add.f32 	%f73, %f72, 0fBAB6061A;
	mul.rn.f32 	%f74, %f73, %f11;
	add.f32 	%f75, %f74, 0f3D2AAAA5;
	mul.rn.f32 	%f76, %f75, %f11;
	add.f32 	%f77, %f76, 0fBF000000;
	mul.rn.f32 	%f78, %f77, %f11;
	add.f32 	%f195, %f78, 0f3F800000;
	bra.uni 	BB0_19;

BB0_18:
	mov.f32 	%f79, 0fB94CA1F9;
	mul.rn.f32 	%f80, %f79, %f11;
	add.f32 	%f81, %f80, 0f3C08839E;
	mul.rn.f32 	%f82, %f81, %f11;
	add.f32 	%f83, %f82, 0fBE2AAAA3;
	mul.rn.f32 	%f84, %f83, %f11;
	mul.rn.f32 	%f85, %f84, %f194;
	add.f32 	%f195, %f85, %f194;

BB0_19:
	and.b32  	%r230, %r422, 2;
	setp.eq.s32 	%p21, %r230, 0;
	neg.f32 	%f86, %f195;
	selp.f32 	%f196, %f195, %f86, %p21;
	bra.uni 	BB0_21;

BB0_20:
	mov.f32 	%f87, 0f00000000;
	mul.rn.f32 	%f196, %f7, %f87;

BB0_21:
	add.f32 	%f18, %f196, 0fBF666666;
	mul.f32 	%f19, %f1, 0f41A00000;
	setp.eq.f32 	%p22, %f19, 0f7F800000;
	@%p22 bra 	BB0_41;

	setp.eq.f32 	%p23, %f19, 0fFF800000;
	setp.eq.f32 	%p24, %f19, 0f00000000;
	or.pred  	%p25, %p23, %p24;
	@%p25 bra 	BB0_41;

	// inline asm
	abs.f32 	%f88, %f19;
	// inline asm
	setp.gt.f32 	%p26, %f88, 0f473BA700;
	@%p26 bra 	BB0_25;

	mov.f32 	%f92, 0f3F22F983;
	mul.rn.f32 	%f91, %f19, %f92;
	// inline asm
	cvt.rni.f32.f32 	%f90, %f91;
	// inline asm
	cvt.rzi.s32.f32 	%r433, %f90;
	cvt.rn.f32.s32 	%f93, %r433;
	mov.f32 	%f94, 0f3FC90000;
	mul.rn.f32 	%f95, %f93, %f94;
	sub.f32 	%f96, %f19, %f95;
	mov.f32 	%f97, 0f39FD8000;
	mul.rn.f32 	%f98, %f93, %f97;
	sub.f32 	%f99, %f96, %f98;
	mov.f32 	%f100, 0f34A88000;
	mul.rn.f32 	%f101, %f93, %f100;
	sub.f32 	%f102, %f99, %f101;
	mov.f32 	%f103, 0f2E85A309;
	mul.rn.f32 	%f104, %f93, %f103;
	sub.f32 	%f197, %f102, %f104;
	bra.uni 	BB0_37;

BB0_25:
	mov.b32 	 %r42, %f19;
	and.b32  	%r425, %r42, -2147483648;
	shr.u32 	%r44, %r42, 23;
	and.b32  	%r249, %r44, 255;
	add.s32 	%r250, %r249, -128;
	shl.b32 	%r251, %r42, 8;
	or.b32  	%r248, %r251, -2147483648;
	shr.u32 	%r252, %r250, 5;
	mov.u32 	%r253, 4;
	sub.s32 	%r254, %r253, %r252;
	ld.const.u32 	%r232, [__GPU_i2opi_f];
	mul.lo.s32 	%r255, %r232, %r248;
	// inline asm
	mul.hi.u32 	%r231, %r232, %r248;
	// inline asm
	st.local.u32 	[%SP+0], %r255;
	ld.const.u32 	%r235, [__GPU_i2opi_f+4];
	mul.lo.s32 	%r257, %r235, %r248;
	// inline asm
	mul.hi.u32 	%r234, %r235, %r248;
	// inline asm
	mad.lo.s32 	%r258, %r235, %r248, %r231;
	st.local.u32 	[%SP+4], %r258;
	setp.lt.u32 	%p27, %r258, %r257;
	selp.u32 	%r259, 1, 0, %p27;
	add.s32 	%r260, %r259, %r234;
	ld.const.u32 	%r238, [__GPU_i2opi_f+8];
	mul.lo.s32 	%r261, %r238, %r248;
	// inline asm
	mul.hi.u32 	%r237, %r238, %r248;
	// inline asm
	mad.lo.s32 	%r262, %r238, %r248, %r260;
	st.local.u32 	[%SP+8], %r262;
	setp.lt.u32 	%p28, %r262, %r261;
	selp.u32 	%r263, 1, 0, %p28;
	add.s32 	%r264, %r263, %r237;
	ld.const.u32 	%r241, [__GPU_i2opi_f+12];
	mul.lo.s32 	%r265, %r241, %r248;
	// inline asm
	mul.hi.u32 	%r240, %r241, %r248;
	// inline asm
	mad.lo.s32 	%r266, %r241, %r248, %r264;
	st.local.u32 	[%SP+12], %r266;
	setp.lt.u32 	%p29, %r266, %r265;
	selp.u32 	%r267, 1, 0, %p29;
	add.s32 	%r268, %r267, %r240;
	ld.const.u32 	%r244, [__GPU_i2opi_f+16];
	mul.lo.s32 	%r269, %r244, %r248;
	// inline asm
	mul.hi.u32 	%r243, %r244, %r248;
	// inline asm
	mad.lo.s32 	%r270, %r244, %r248, %r268;
	st.local.u32 	[%SP+16], %r270;
	setp.lt.u32 	%p30, %r270, %r269;
	selp.u32 	%r271, 1, 0, %p30;
	add.s32 	%r272, %r271, %r243;
	ld.const.u32 	%r247, [__GPU_i2opi_f+20];
	mul.lo.s32 	%r273, %r247, %r248;
	// inline asm
	mul.hi.u32 	%r246, %r247, %r248;
	// inline asm
	mad.lo.s32 	%r274, %r247, %r248, %r272;
	st.local.u32 	[%SP+20], %r274;
	setp.lt.u32 	%p31, %r274, %r273;
	selp.u32 	%r275, 1, 0, %p31;
	add.s32 	%r276, %r275, %r246;
	st.local.u32 	[%SP+24], %r276;
	and.b32  	%r45, %r44, 31;
	shl.b32 	%r277, %r254, 2;
	add.s32 	%r278, %r277, %r2;
	add.s32 	%r46, %r278, -16;
	ld.local.u32 	%r423, [%r278+8];
	ld.local.u32 	%r424, [%r278+4];
	setp.eq.s32 	%p32, %r45, 0;
	@%p32 bra 	BB0_27;

	shl.b32 	%r279, %r423, %r45;
	neg.s32 	%r280, %r44;
	and.b32  	%r281, %r280, 31;
	shr.u32 	%r282, %r424, %r281;
	or.b32  	%r423, %r282, %r279;
	ld.local.u32 	%r283, [%r46+16];
	shr.u32 	%r284, %r283, %r281;
	shl.b32 	%r285, %r424, %r45;
	or.b32  	%r424, %r284, %r285;

BB0_27:
	shr.u32 	%r286, %r424, 30;
	shl.b32 	%r287, %r423, 2;
	or.b32  	%r429, %r286, %r287;
	shl.b32 	%r54, %r424, 2;
	setp.ne.s32 	%p33, %r54, 0;
	selp.u32 	%r288, 1, 0, %p33;
	add.s32 	%r289, %r288, %r429;
	setp.gt.u32 	%p34, %r289, -2147483648;
	selp.u32 	%r290, 1, 0, %p34;
	shr.u32 	%r291, %r423, 30;
	add.s32 	%r292, %r290, %r291;
	neg.s32 	%r293, %r292;
	setp.lt.s32 	%p35, %r42, 0;
	selp.b32 	%r433, %r293, %r292, %p35;
	@%p34 bra 	BB0_29;

	mov.u32 	%r428, %r54;
	bra.uni 	BB0_30;

BB0_29:
	not.b32 	%r294, %r429;
	neg.s32 	%r56, %r54;
	setp.eq.s32 	%p36, %r54, 0;
	selp.u32 	%r295, 1, 0, %p36;
	add.s32 	%r429, %r295, %r294;
	xor.b32  	%r425, %r425, -2147483648;
	mov.u32 	%r428, %r56;

BB0_30:
	mov.u32 	%r427, %r428;
	setp.gt.s32 	%p37, %r429, 0;
	@%p37 bra 	BB0_32;

	mov.u32 	%r432, 0;
	bra.uni 	BB0_34;

BB0_32:
	mov.u32 	%r432, 0;

BB0_33:
	shr.u32 	%r298, %r427, 31;
	shl.b32 	%r299, %r429, 1;
	or.b32  	%r429, %r298, %r299;
	shl.b32 	%r427, %r427, 1;
	add.s32 	%r432, %r432, -1;
	setp.gt.s32 	%p38, %r429, 0;
	@%p38 bra 	BB0_33;

BB0_34:
	mul.lo.s32 	%r431, %r429, -921707870;
	mov.u32 	%r302, -921707870;
	// inline asm
	mul.hi.u32 	%r300, %r429, %r302;
	// inline asm
	setp.gt.s32 	%p39, %r300, 0;
	mov.u32 	%r430, %r300;
	@%p39 bra 	BB0_35;
	bra.uni 	BB0_36;

BB0_35:
	shl.b32 	%r303, %r300, 1;
	shr.u32 	%r304, %r431, 31;
	or.b32  	%r430, %r303, %r304;
	mul.lo.s32 	%r431, %r429, -1843415740;
	add.s32 	%r432, %r432, -1;

BB0_36:
	setp.ne.s32 	%p40, %r431, 0;
	selp.u32 	%r305, 1, 0, %p40;
	add.s32 	%r306, %r305, %r430;
	shr.u32 	%r307, %r306, 8;
	shr.u32 	%r308, %r306, 7;
	and.b32  	%r309, %r308, 1;
	shl.b32 	%r310, %r432, 23;
	add.s32 	%r311, %r310, %r307;
	add.s32 	%r312, %r311, %r309;
	add.s32 	%r313, %r312, 1056964608;
	or.b32  	%r314, %r313, %r425;
	mov.b32 	 %f197, %r314;

BB0_37:
	and.b32  	%r315, %r433, 1;
	setp.eq.s32 	%p41, %r315, 0;
	mul.rn.f32 	%f23, %f197, %f197;
	@%p41 bra 	BB0_39;

	mov.f32 	%f105, 0f37CCF5CE;
	mul.rn.f32 	%f106, %f105, %f23;
	add.f32 	%f107, %f106, 0fBAB6061A;
	mul.rn.f32 	%f108, %f107, %f23;
	add.f32 	%f109, %f108, 0f3D2AAAA5;
	mul.rn.f32 	%f110, %f109, %f23;
	add.f32 	%f111, %f110, 0fBF000000;
	mul.rn.f32 	%f112, %f111, %f23;
	add.f32 	%f198, %f112, 0f3F800000;
	bra.uni 	BB0_40;

BB0_39:
	mov.f32 	%f113, 0fB94CA1F9;
	mul.rn.f32 	%f114, %f113, %f23;
	add.f32 	%f115, %f114, 0f3C08839E;
	mul.rn.f32 	%f116, %f115, %f23;
	add.f32 	%f117, %f116, 0fBE2AAAA3;
	mul.rn.f32 	%f118, %f117, %f23;
	mul.rn.f32 	%f119, %f118, %f197;
	add.f32 	%f198, %f119, %f197;

BB0_40:
	and.b32  	%r316, %r433, 2;
	setp.eq.s32 	%p42, %r316, 0;
	neg.f32 	%f120, %f198;
	selp.f32 	%f199, %f198, %f120, %p42;
	bra.uni 	BB0_42;

BB0_41:
	mov.f32 	%f121, 0f00000000;
	mul.rn.f32 	%f199, %f19, %f121;

BB0_42:
	add.f32 	%f30, %f199, 0fBF666666;
	mul.f32 	%f31, %f2, 0f41A00000;
	setp.eq.f32 	%p43, %f31, 0f7F800000;
	@%p43 bra 	BB0_62;

	setp.eq.f32 	%p44, %f31, 0fFF800000;
	setp.eq.f32 	%p45, %f31, 0f00000000;
	or.pred  	%p46, %p44, %p45;
	@%p46 bra 	BB0_62;

	// inline asm
	abs.f32 	%f122, %f31;
	// inline asm
	setp.gt.f32 	%p47, %f122, 0f473BA700;
	@%p47 bra 	BB0_46;

	mov.f32 	%f126, 0f3F22F983;
	mul.rn.f32 	%f125, %f31, %f126;
	// inline asm
	cvt.rni.f32.f32 	%f124, %f125;
	// inline asm
	cvt.rzi.s32.f32 	%r444, %f124;
	cvt.rn.f32.s32 	%f127, %r444;
	mov.f32 	%f128, 0f3FC90000;
	mul.rn.f32 	%f129, %f127, %f128;
	sub.f32 	%f130, %f31, %f129;
	mov.f32 	%f131, 0f39FD8000;
	mul.rn.f32 	%f132, %f127, %f131;
	sub.f32 	%f133, %f130, %f132;
	mov.f32 	%f134, 0f34A88000;
	mul.rn.f32 	%f135, %f127, %f134;
	sub.f32 	%f136, %f133, %f135;
	mov.f32 	%f137, 0f2E85A309;
	mul.rn.f32 	%f138, %f127, %f137;
	sub.f32 	%f200, %f136, %f138;
	bra.uni 	BB0_58;

BB0_46:
	mov.b32 	 %r80, %f31;
	and.b32  	%r436, %r80, -2147483648;
	shr.u32 	%r82, %r80, 23;
	and.b32  	%r335, %r82, 255;
	add.s32 	%r336, %r335, -128;
	shl.b32 	%r337, %r80, 8;
	or.b32  	%r334, %r337, -2147483648;
	shr.u32 	%r338, %r336, 5;
	mov.u32 	%r339, 4;
	sub.s32 	%r340, %r339, %r338;
	ld.const.u32 	%r318, [__GPU_i2opi_f];
	mul.lo.s32 	%r341, %r318, %r334;
	// inline asm
	mul.hi.u32 	%r317, %r318, %r334;
	// inline asm
	st.local.u32 	[%SP+0], %r341;
	ld.const.u32 	%r321, [__GPU_i2opi_f+4];
	mul.lo.s32 	%r343, %r321, %r334;
	// inline asm
	mul.hi.u32 	%r320, %r321, %r334;
	// inline asm
	mad.lo.s32 	%r344, %r321, %r334, %r317;
	st.local.u32 	[%SP+4], %r344;
	setp.lt.u32 	%p48, %r344, %r343;
	selp.u32 	%r345, 1, 0, %p48;
	add.s32 	%r346, %r345, %r320;
	ld.const.u32 	%r324, [__GPU_i2opi_f+8];
	mul.lo.s32 	%r347, %r324, %r334;
	// inline asm
	mul.hi.u32 	%r323, %r324, %r334;
	// inline asm
	mad.lo.s32 	%r348, %r324, %r334, %r346;
	st.local.u32 	[%SP+8], %r348;
	setp.lt.u32 	%p49, %r348, %r347;
	selp.u32 	%r349, 1, 0, %p49;
	add.s32 	%r350, %r349, %r323;
	ld.const.u32 	%r327, [__GPU_i2opi_f+12];
	mul.lo.s32 	%r351, %r327, %r334;
	// inline asm
	mul.hi.u32 	%r326, %r327, %r334;
	// inline asm
	mad.lo.s32 	%r352, %r327, %r334, %r350;
	st.local.u32 	[%SP+12], %r352;
	setp.lt.u32 	%p50, %r352, %r351;
	selp.u32 	%r353, 1, 0, %p50;
	add.s32 	%r354, %r353, %r326;
	ld.const.u32 	%r330, [__GPU_i2opi_f+16];
	mul.lo.s32 	%r355, %r330, %r334;
	// inline asm
	mul.hi.u32 	%r329, %r330, %r334;
	// inline asm
	mad.lo.s32 	%r356, %r330, %r334, %r354;
	st.local.u32 	[%SP+16], %r356;
	setp.lt.u32 	%p51, %r356, %r355;
	selp.u32 	%r357, 1, 0, %p51;
	add.s32 	%r358, %r357, %r329;
	ld.const.u32 	%r333, [__GPU_i2opi_f+20];
	mul.lo.s32 	%r359, %r333, %r334;
	// inline asm
	mul.hi.u32 	%r332, %r333, %r334;
	// inline asm
	mad.lo.s32 	%r360, %r333, %r334, %r358;
	st.local.u32 	[%SP+20], %r360;
	setp.lt.u32 	%p52, %r360, %r359;
	selp.u32 	%r361, 1, 0, %p52;
	add.s32 	%r362, %r361, %r332;
	st.local.u32 	[%SP+24], %r362;
	and.b32  	%r83, %r82, 31;
	shl.b32 	%r363, %r340, 2;
	add.s32 	%r364, %r363, %r2;
	add.s32 	%r84, %r364, -16;
	ld.local.u32 	%r434, [%r364+8];
	ld.local.u32 	%r435, [%r364+4];
	setp.eq.s32 	%p53, %r83, 0;
	@%p53 bra 	BB0_48;

	shl.b32 	%r365, %r434, %r83;
	neg.s32 	%r366, %r82;
	and.b32  	%r367, %r366, 31;
	shr.u32 	%r368, %r435, %r367;
	or.b32  	%r434, %r368, %r365;
	ld.local.u32 	%r369, [%r84+16];
	shr.u32 	%r370, %r369, %r367;
	shl.b32 	%r371, %r435, %r83;
	or.b32  	%r435, %r370, %r371;

BB0_48:
	shr.u32 	%r372, %r435, 30;
	shl.b32 	%r373, %r434, 2;
	or.b32  	%r440, %r372, %r373;
	shl.b32 	%r92, %r435, 2;
	setp.ne.s32 	%p54, %r92, 0;
	selp.u32 	%r374, 1, 0, %p54;
	add.s32 	%r375, %r374, %r440;
	setp.gt.u32 	%p55, %r375, -2147483648;
	selp.u32 	%r376, 1, 0, %p55;
	shr.u32 	%r377, %r434, 30;
	add.s32 	%r378, %r376, %r377;
	neg.s32 	%r379, %r378;
	setp.lt.s32 	%p56, %r80, 0;
	selp.b32 	%r444, %r379, %r378, %p56;
	@%p55 bra 	BB0_50;

	mov.u32 	%r439, %r92;
	bra.uni 	BB0_51;

BB0_50:
	not.b32 	%r380, %r440;
	neg.s32 	%r94, %r92;
	setp.eq.s32 	%p57, %r92, 0;
	selp.u32 	%r381, 1, 0, %p57;
	add.s32 	%r440, %r381, %r380;
	xor.b32  	%r436, %r436, -2147483648;
	mov.u32 	%r439, %r94;

BB0_51:
	mov.u32 	%r438, %r439;
	setp.gt.s32 	%p58, %r440, 0;
	@%p58 bra 	BB0_53;

	mov.u32 	%r443, 0;
	bra.uni 	BB0_55;

BB0_53:
	mov.u32 	%r443, 0;

BB0_54:
	shr.u32 	%r384, %r438, 31;
	shl.b32 	%r385, %r440, 1;
	or.b32  	%r440, %r384, %r385;
	shl.b32 	%r438, %r438, 1;
	add.s32 	%r443, %r443, -1;
	setp.gt.s32 	%p59, %r440, 0;
	@%p59 bra 	BB0_54;

BB0_55:
	mul.lo.s32 	%r442, %r440, -921707870;
	mov.u32 	%r388, -921707870;
	// inline asm
	mul.hi.u32 	%r386, %r440, %r388;
	// inline asm
	setp.gt.s32 	%p60, %r386, 0;
	mov.u32 	%r441, %r386;
	@%p60 bra 	BB0_56;
	bra.uni 	BB0_57;

BB0_56:
	shl.b32 	%r389, %r386, 1;
	shr.u32 	%r390, %r442, 31;
	or.b32  	%r441, %r389, %r390;
	mul.lo.s32 	%r442, %r440, -1843415740;
	add.s32 	%r443, %r443, -1;

BB0_57:
	setp.ne.s32 	%p61, %r442, 0;
	selp.u32 	%r391, 1, 0, %p61;
	add.s32 	%r392, %r391, %r441;
	shr.u32 	%r393, %r392, 8;
	shr.u32 	%r394, %r392, 7;
	and.b32  	%r395, %r394, 1;
	shl.b32 	%r396, %r443, 23;
	add.s32 	%r397, %r396, %r393;
	add.s32 	%r398, %r397, %r395;
	add.s32 	%r399, %r398, 1056964608;
	or.b32  	%r400, %r399, %r436;
	mov.b32 	 %f200, %r400;

BB0_58:
	and.b32  	%r401, %r444, 1;
	setp.eq.s32 	%p62, %r401, 0;
	mul.rn.f32 	%f35, %f200, %f200;
	@%p62 bra 	BB0_60;

	mov.f32 	%f139, 0f37CCF5CE;
	mul.rn.f32 	%f140, %f139, %f35;
	add.f32 	%f141, %f140, 0fBAB6061A;
	mul.rn.f32 	%f142, %f141, %f35;
	add.f32 	%f143, %f142, 0f3D2AAAA5;
	mul.rn.f32 	%f144, %f143, %f35;
	add.f32 	%f145, %f144, 0fBF000000;
	mul.rn.f32 	%f146, %f145, %f35;
	add.f32 	%f201, %f146, 0f3F800000;
	bra.uni 	BB0_61;

BB0_60:
	mov.f32 	%f147, 0fB94CA1F9;
	mul.rn.f32 	%f148, %f147, %f35;
	add.f32 	%f149, %f148, 0f3C08839E;
	mul.rn.f32 	%f150, %f149, %f35;
	add.f32 	%f151, %f150, 0fBE2AAAA3;
	mul.rn.f32 	%f152, %f151, %f35;
	mul.rn.f32 	%f153, %f152, %f200;
	add.f32 	%f201, %f153, %f200;

BB0_61:
	and.b32  	%r402, %r444, 2;
	setp.eq.s32 	%p63, %r402, 0;
	neg.f32 	%f154, %f201;
	selp.f32 	%f202, %f201, %f154, %p63;
	bra.uni 	BB0_63;

BB0_62:
	mov.f32 	%f155, 0f00000000;
	mul.rn.f32 	%f202, %f31, %f155;

BB0_63:
	add.f32 	%f172, %f202, 0fBF666666;
	add.f32 	%f173, %f30, %f172;
	mul.f32 	%f174, %f172, %f172;
	mul.f32 	%f175, %f30, %f30;
	fma.rn.f32 	%f157, %f30, %f30, %f174;
	// inline asm
	sqrt.approx.f32 	%f156, %f157;
	// inline asm
	sub.f32 	%f176, %f173, %f156;
	add.f32 	%f177, %f18, %f172;
	fma.rn.f32 	%f159, %f18, %f18, %f174;
	// inline asm
	sqrt.approx.f32 	%f158, %f159;
	// inline asm
	sub.f32 	%f178, %f177, %f158;
	fma.rn.f32 	%f161, %f18, %f18, %f175;
	// inline asm
	sqrt.approx.f32 	%f160, %f161;
	// inline asm
	add.f32 	%f179, %f18, %f30;
	sub.f32 	%f180, %f179, %f160;
	add.f32 	%f181, %f176, %f178;
	mul.f32 	%f182, %f178, %f178;
	fma.rn.f32 	%f163, %f176, %f176, %f182;
	// inline asm
	sqrt.approx.f32 	%f162, %f163;
	// inline asm
	add.f32 	%f183, %f181, %f162;
	add.f32 	%f184, %f183, %f180;
	mul.f32 	%f185, %f180, %f180;
	fma.rn.f32 	%f165, %f183, %f183, %f185;
	// inline asm
	sqrt.approx.f32 	%f164, %f165;
	// inline asm
	add.f32 	%f186, %f184, %f164;
	add.f32 	%f187, %f4, %f186;
	fma.rn.f32 	%f167, %f186, %f186, %f5;
	// inline asm
	sqrt.approx.f32 	%f166, %f167;
	// inline asm
	sub.f32 	%f188, %f187, %f166;
	add.f32 	%f189, %f188, %f6;
	mul.f32 	%f190, %f6, %f6;
	fma.rn.f32 	%f169, %f188, %f188, %f190;
	// inline asm
	sqrt.approx.f32 	%f168, %f169;
	// inline asm
	add.f32 	%f191, %f189, %f168;
	sub.f32 	%f192, %f191, %f2;
	fma.rn.f32 	%f171, %f191, %f191, %f3;
	// inline asm
	sqrt.approx.f32 	%f170, %f171;
	// inline asm
	sub.f32 	%f193, %f192, %f170;
	// inline asm
	mov.u32 	%r403, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r404, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r405, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r406, %tid.x;
	// inline asm
	add.s32 	%r407, %r406, %r403;
	mad.lo.s32 	%r408, %r405, %r404, %r407;
	shl.b32 	%r409, %r408, 2;
	ld.param.u32 	%r411, [ray_intervals_param_1];
	add.s32 	%r410, %r411, %r409;
	st.global.f32 	[%r410], %f193;
	ret;
}


